<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.live.model.mapper.UserMapper">

	<resultMap type="user" id="user">
		<result column="user_id" property="userId" />
		<result column="user_name" property="userName" />
	</resultMap>

	<resultMap type="user" id="userAll" extends="user">
		<result column="user_password" property="userPwd" />
		<result column="email_id" property="emailId" />
		<result column="email_domain" property="emailDomain" />
		<result column="join_date" property="joinDate" />
		<result column="manager" property="manager" />
	</resultMap>

	<select id="searchPwd" parameterType="user" resultType="string">
		select
		user_password
		from users
		where user_id = #{userId} and user_name =
		#{userName} and email_id = #{emailId} and email_domain =
		#{emailDomain}
	</select>

	<select id="idCheck" parameterType="string" resultType="int">
		select
		count(user_id)
		from users
		where user_id = #{userid}
	</select>

	<insert id="joinUser" parameterType="user">
		insert into users
		(user_name, user_id, user_password, email_id, email_domain, join_date)
		values (#{userName}, #{userId}, #{userPwd}, #{emailId},
		#{emailDomain}, now())
	</insert>

	<select id="loginUser" parameterType="user" resultMap="user">
		select
		user_id, user_name, user_password, email_id, email_domain, join_date,
		manager
		from users
		where user_id = #{userId} and user_password =
		#{userPwd}
	</select>

	<select id="listUser" resultMap="userAll">
		select user_name, user_id,
		user_password, email_id, email_domain, join_date, manager
		from users
		order by
		join_date
	</select>

	<select id="getUser" parameterType="string" resultMap="userAll">
		select
		user_id, user_name, email_id, email_domain, join_date,manager
		from users
		where user_id = #{userId}
	</select>

	<update id="updateUser" parameterType="user">
		update users
		<trim prefix="set" suffixOverrides=",">
			<if test="userName != null">user_name = #{userName},</if>
			<if test="userPwd != null">user_password = #{userPwd},</if>
			<if test="emailId != null">email_id = #{emailId},</if>
			<if test="emailDomain != null">email_domain = #{emailDomain},</if>
		</trim>
		where user_id = #{userId}
	</update>

	<delete id="deleteUser" parameterType="String">
		delete from users
		where
		user_id = #{userId}
	</delete>

	<select id="getRefreshToken" parameterType="string"
		resultType="string">
		select refresh_token
		from users
		where user_id = #{userId}
	</select>

	<update id="saveRefreshToken" parameterType="map">
		update users
		set
		refresh_token = #{token}
		where user_id = #{userId}
	</update>

	<update id="deleteRefreshToken" parameterType="string">
		update users
		set
		refresh_token = null
		where user_id =
		#{userId}
	</update>


</mapper>